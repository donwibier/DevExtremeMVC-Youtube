/**
* DevExtreme (ui/drop_down_menu.d.ts)
* Version: 20.1.7
* Build date: Tue Aug 25 2020
*
* Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
* Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/
*/
import '../jquery_augmentation';

import {
    dxElement
} from '../core/element';

import {
    template
} from '../core/templates/template';

import DataSource, {
    DataSourceOptions
} from '../data/data_source';

import {
    event
} from '../events/index';

import Widget, {
    WidgetOptions
} from './widget/ui.widget';

/** Warning! This type is used for internal purposes. Do not import it directly. */
export interface dxDropDownMenuOptions extends WidgetOptions<dxDropDownMenu> {
    /** Specifies whether or not the widget changes its state when interacting with a user. */
    activeStateEnabled?: boolean;
    /** The name of the icon to be displayed by the DropDownMenu button. */
    buttonIcon?: string;
    /** The text displayed in the DropDownMenu button. */
    buttonText?: string;
    /** Overriden */
    dataSource?: string | Array<any> | DataSource | DataSourceOptions;
    /** Specifies whether the widget changes its state when a user pauses on it. */
    hoverStateEnabled?: boolean;
    /** Specifies a custom template for items. */
    itemTemplate?: template | ((itemData: any, itemIndex: number, itemElement: dxElement) => string | Element | JQuery);
    /** An array of items displayed by the widget. */
    items?: Array<any>;
    /** A function that is executed when the button that opens the drop-down menu is clicked or tapped. */
    onButtonClick?: ((e: { component?: dxDropDownMenu, element?: dxElement, model?: any, jQueryEvent?: JQueryEventObject, event?: event }) => any) | string;
    /** A function that is executed when a menu item is clicked or tapped. */
    onItemClick?: ((e: { component?: dxDropDownMenu, element?: dxElement, model?: any, itemData?: any, itemElement?: dxElement, itemIndex?: number, event?: event }) => any) | string;
    /** Specifies whether or not the drop-down menu is displayed. */
    opened?: boolean;
    /** Specifies the popup element's height in pixels. */
    popupHeight?: number | string | Function;
    /** Specifies the popup element's width in pixels. */
    popupWidth?: number | string | Function;
    /** Specifies whether or not to show the drop down menu within a Popover widget. */
    usePopover?: boolean;
}
/** Warning! This type is used for internal purposes. Do not import it directly. */
/** A drop-down menu widget. */
export default class dxDropDownMenu extends Widget {
    constructor(element: Element, options?: dxDropDownMenuOptions)
    constructor(element: JQuery, options?: dxDropDownMenuOptions)
    /** Closes the drop-down menu. */
    close(): void;
    /** Opens the drop-down menu. */
    open(): void;
}
