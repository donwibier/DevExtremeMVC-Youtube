//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
using Microsoft.Extensions.Configuration;
namespace DevAVXPO.Models.XPO.DevAV
{
	public static class ConnectionHelper
	{
		static Type[] persistentTypes = new Type[] {
			typeof(XpCrests),
			typeof(XpCustomer_Communications),
			typeof(XpCustomer_Employees),
			typeof(XpCustomer_Store_Locations),
			typeof(XpCustomers),
			typeof(XpDepartments),
			typeof(XpEmployees),
			typeof(XpEvaluations),
			typeof(XpOrder_Items),
			typeof(XpOrders),
			typeof(XpProbation),
			typeof(XpProduct_Catalogs),
			typeof(XpProduct_Images),
			typeof(XpProducts),
			typeof(XpQuote_Items),
			typeof(XpQuotes),
			typeof(XpStates),
			typeof(XpTasks)
		};
		public static Type[] GetPersistentTypes()
		{
			Type[] copy = new Type[persistentTypes.Length];
			Array.Copy(persistentTypes, copy, persistentTypes.Length);
			return copy;
		}
		public const string ConnectionStringName = "DevAVConnection";
		public static void Connect(IConfiguration configuration, DevExpress.Xpo.DB.AutoCreateOption autoCreateOption, bool threadSafe = false)
		{
			if (threadSafe)
			{
				var provider = GetConnectionProvider(configuration, autoCreateOption);
				var dictionary = new DevExpress.Xpo.Metadata.ReflectionDictionary();
				dictionary.NullableBehavior = NullableBehavior.ByUnderlyingType;
				dictionary.GetDataStoreSchema(persistentTypes);
				XpoDefault.DataLayer = new ThreadSafeDataLayer(dictionary, provider);
			}
			else
			{
				var dictionary = new DevExpress.Xpo.Metadata.ReflectionDictionary();
				dictionary.NullableBehavior = NullableBehavior.ByUnderlyingType;
				XpoDefault.DataLayer = XpoDefault.GetDataLayer(configuration.GetConnectionString(ConnectionStringName), dictionary, autoCreateOption);
			}
			XpoDefault.Session = null;
		}
		public static DevExpress.Xpo.DB.IDataStore GetConnectionProvider(IConfiguration configuration, DevExpress.Xpo.DB.AutoCreateOption autoCreateOption)
		{
			return XpoDefault.GetConnectionProvider(configuration.GetConnectionString(ConnectionStringName), autoCreateOption);
		}
		public static DevExpress.Xpo.DB.IDataStore GetConnectionProvider(IConfiguration configuration, DevExpress.Xpo.DB.AutoCreateOption autoCreateOption, out IDisposable[] objectsToDisposeOnDisconnect)
		{
			return XpoDefault.GetConnectionProvider(configuration.GetConnectionString(ConnectionStringName), autoCreateOption, out objectsToDisposeOnDisconnect);
		}
		public static IDataLayer GetDataLayer(IConfiguration configuration, DevExpress.Xpo.DB.AutoCreateOption autoCreateOption)
		{
			var dictionary = new DevExpress.Xpo.Metadata.ReflectionDictionary();
			dictionary.NullableBehavior = NullableBehavior.ByUnderlyingType;
			return XpoDefault.GetDataLayer(configuration.GetConnectionString(ConnectionStringName), dictionary, autoCreateOption);
		}
	}

}
