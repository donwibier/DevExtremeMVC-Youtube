//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
namespace DevAVXPO.Models.XPO.DevAV
{

	[Persistent(@"Customers")]
	public partial class XpCustomers : XPLiteObject
	{
		int fCustomer_ID;
		[Key(true)]
		public int Customer_ID
		{
			get { return fCustomer_ID; }
			set { SetPropertyValue<int>(nameof(Customer_ID), ref fCustomer_ID, value); }
		}
		string fCustomer_Name;
		[Size(255)]
		public string Customer_Name
		{
			get { return fCustomer_Name; }
			set { SetPropertyValue<string>(nameof(Customer_Name), ref fCustomer_Name, value); }
		}
		string fCustomer_Address;
		[Size(255)]
		public string Customer_Address
		{
			get { return fCustomer_Address; }
			set { SetPropertyValue<string>(nameof(Customer_Address), ref fCustomer_Address, value); }
		}
		string fCustomer_CIty;
		[Size(50)]
		public string Customer_CIty
		{
			get { return fCustomer_CIty; }
			set { SetPropertyValue<string>(nameof(Customer_CIty), ref fCustomer_CIty, value); }
		}
		XpStates fCustomer_State;
		[Association(@"XpCustomersReferencesXpStates")]
		public XpStates Customer_State
		{
			get { return fCustomer_State; }
			set { SetPropertyValue<XpStates>(nameof(Customer_State), ref fCustomer_State, value); }
		}
		int? fCustomer_Zipcode;
		[Indexed(Name = @"Customers$Customer_Zipcode")]
		[ColumnDbDefaultValue("((0))")]
		public int? Customer_Zipcode
		{
			get { return fCustomer_Zipcode; }
			set { SetPropertyValue<int?>(nameof(Customer_Zipcode), ref fCustomer_Zipcode, value); }
		}
		string fCustomer_Billing_Address;
		[Size(255)]
		public string Customer_Billing_Address
		{
			get { return fCustomer_Billing_Address; }
			set { SetPropertyValue<string>(nameof(Customer_Billing_Address), ref fCustomer_Billing_Address, value); }
		}
		string fCustomer_Billing_City;
		[Size(255)]
		public string Customer_Billing_City
		{
			get { return fCustomer_Billing_City; }
			set { SetPropertyValue<string>(nameof(Customer_Billing_City), ref fCustomer_Billing_City, value); }
		}
		int? fCustomer_Billing_State;
		public int? Customer_Billing_State
		{
			get { return fCustomer_Billing_State; }
			set { SetPropertyValue<int?>(nameof(Customer_Billing_State), ref fCustomer_Billing_State, value); }
		}
		int? fCustomer_Billing_Zipcode;
		[Indexed(Name = @"Customers$Customer_Billing_Zipcode")]
		[ColumnDbDefaultValue("((0))")]
		public int? Customer_Billing_Zipcode
		{
			get { return fCustomer_Billing_Zipcode; }
			set { SetPropertyValue<int?>(nameof(Customer_Billing_Zipcode), ref fCustomer_Billing_Zipcode, value); }
		}
		string fCustomer_Phone;
		[Size(25)]
		public string Customer_Phone
		{
			get { return fCustomer_Phone; }
			set { SetPropertyValue<string>(nameof(Customer_Phone), ref fCustomer_Phone, value); }
		}
		string fCustomer_Fax;
		[Size(25)]
		public string Customer_Fax
		{
			get { return fCustomer_Fax; }
			set { SetPropertyValue<string>(nameof(Customer_Fax), ref fCustomer_Fax, value); }
		}
		string fCustomer_Website;
		public string Customer_Website
		{
			get { return fCustomer_Website; }
			set { SetPropertyValue<string>(nameof(Customer_Website), ref fCustomer_Website, value); }
		}
		decimal? fCustomer_Annual_Revenue;
		[ColumnDbDefaultValue("((0))")]
		public decimal? Customer_Annual_Revenue
		{
			get { return fCustomer_Annual_Revenue; }
			set { SetPropertyValue<decimal?>(nameof(Customer_Annual_Revenue), ref fCustomer_Annual_Revenue, value); }
		}
		int? fCustomer_Total_Stores;
		[ColumnDbDefaultValue("((0))")]
		public int? Customer_Total_Stores
		{
			get { return fCustomer_Total_Stores; }
			set { SetPropertyValue<int?>(nameof(Customer_Total_Stores), ref fCustomer_Total_Stores, value); }
		}
		int? fCustomer_Total_Employees;
		[ColumnDbDefaultValue("((0))")]
		public int? Customer_Total_Employees
		{
			get { return fCustomer_Total_Employees; }
			set { SetPropertyValue<int?>(nameof(Customer_Total_Employees), ref fCustomer_Total_Employees, value); }
		}
		string fCustomer_Status;
		[Size(25)]
		public string Customer_Status
		{
			get { return fCustomer_Status; }
			set { SetPropertyValue<string>(nameof(Customer_Status), ref fCustomer_Status, value); }
		}
		byte[] fCustomer_Logo;
		[Size(SizeAttribute.Unlimited)]
		[MemberDesignTimeVisibility(true)]
		public byte[] Customer_Logo
		{
			get { return fCustomer_Logo; }
			set { SetPropertyValue<byte[]>(nameof(Customer_Logo), ref fCustomer_Logo, value); }
		}
		string fCustomer_Profile;
		[Size(SizeAttribute.Unlimited)]
		public string Customer_Profile
		{
			get { return fCustomer_Profile; }
			set { SetPropertyValue<string>(nameof(Customer_Profile), ref fCustomer_Profile, value); }
		}
		[Association(@"XpCustomer_EmployeesReferencesXpCustomers")]
		public XPCollection<XpCustomer_Employees> Customer_Employeess { get { return GetCollection<XpCustomer_Employees>(nameof(Customer_Employeess)); } }
		[Association(@"XpCustomer_Store_LocationsReferencesXpCustomers")]
		public XPCollection<XpCustomer_Store_Locations> Customer_Store_Locationss { get { return GetCollection<XpCustomer_Store_Locations>(nameof(Customer_Store_Locationss)); } }
		[Association(@"XpOrdersReferencesXpCustomers")]
		public XPCollection<XpOrders> XpOrdersCollection { get { return GetCollection<XpOrders>(nameof(XpOrdersCollection)); } }
		[Association(@"XpQuotesReferencesXpCustomers")]
		public XPCollection<XpQuotes> XpQuotesCollection { get { return GetCollection<XpQuotes>(nameof(XpQuotesCollection)); } }
	}

}
